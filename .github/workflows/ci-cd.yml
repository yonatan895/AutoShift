name: CI-CD

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 2 * * *"  # nightly security & smoke tests (UTC)

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install -r requirements/ci.txt
      - name: Code style & security
        run: |
          black .
          isort .
          bandit -r src -ll
  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
          POSTGRES_DB: django
        ports: ['5432:5432']
      redis:
        image: redis:7
        ports: ['6379:6379']
    env:
      DATABASE_URL: postgres://django:django@localhost:5432/django
      REDIS_URL: redis://localhost:6379/0
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install -r requirements/test.txt
      - run: PYTHONPATH=$PYTHONPATH:$(pwd) pytest --cov=src --cov-fail-under=90
      - uses: codecov/codecov-action@v4
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
      contents: read
    needs: test
    steps:
      - uses: actions/checkout@v4
      - run: echo "${{ github.sha }}" > VERSION
      - name: Build & push image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .
          echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: production
    needs: build
    steps:
      - name: Configure AWS OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/GitHubActionsEKSDeployRole
          aws-region: us-east-1
      - name: Set image tag
        run: |
          yq -i '.spec.template.spec.containers[0].image = "ghcr.io/${{ github.repository }}:${{ github.sha }}"' k8s/deployment.yaml
      - name: Deploy with kubectl
        run: |
          aws eks update-kubeconfig --name mainframe-eks
          kubectl apply -f k8s/
  post-deploy-test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Smoke tests
        run: python scripts/smoke_tests.py
